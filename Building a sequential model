{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNtFy7taqhp8DLJuj2qR6Co"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"N7vSmB3GJmRn","executionInfo":{"status":"ok","timestamp":1709934430557,"user_tz":300,"elapsed":1025,"user":{"displayName":"Daniel Fernando Morales Bernal","userId":"00068911931279033562"}},"outputId":"ec221db8-99dd-4234-947c-87ec2b4a0add"},"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at gdrive; to attempt to forcibly remount, call drive.mount(\"gdrive\", force_remount=True).\n"]}],"source":["from google.colab import drive\n","drive.mount('gdrive')"]},{"cell_type":"code","source":["from tensorflow.keras.models import Sequential\n","from tensorflow.keras.layers import Dense, Flatten, Softmax, Conv2D, MaxPooling2D"],"metadata":{"id":"D-H8-svtJsuO","executionInfo":{"status":"ok","timestamp":1709934438219,"user_tz":300,"elapsed":7664,"user":{"displayName":"Daniel Fernando Morales Bernal","userId":"00068911931279033562"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["model = Sequential([\n","    Flatten(input_shape=(20, 20)),\n","    Dense(16, activation=\"relu\"),\n","    Dense(16, activation=\"relu\"),\n","    Dense(10, activation=\"softmax\")\n","])"],"metadata":{"id":"9q_3bW8J6ouu","executionInfo":{"status":"ok","timestamp":1709934438219,"user_tz":300,"elapsed":18,"user":{"displayName":"Daniel Fernando Morales Bernal","userId":"00068911931279033562"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["model.summary()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"U91dyHTB6_oR","executionInfo":{"status":"ok","timestamp":1709934438449,"user_tz":300,"elapsed":247,"user":{"displayName":"Daniel Fernando Morales Bernal","userId":"00068911931279033562"}},"outputId":"2f5e2f34-e25f-4f0f-8d3c-9a532b086965"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," flatten (Flatten)           (None, 400)               0         \n","                                                                 \n"," dense (Dense)               (None, 16)                6416      \n","                                                                 \n"," dense_1 (Dense)             (None, 16)                272       \n","                                                                 \n"," dense_2 (Dense)             (None, 10)                170       \n","                                                                 \n","=================================================================\n","Total params: 6858 (26.79 KB)\n","Trainable params: 6858 (26.79 KB)\n","Non-trainable params: 0 (0.00 Byte)\n","_________________________________________________________________\n"]}]},{"cell_type":"code","source":["model1 = Sequential([\n","    Conv2D(16, (3,3), strides=2, padding=\"SAME\", activation=\"relu\", input_shape=(28,28,1)),\n","    MaxPooling2D((3,3)),\n","    Flatten(),\n","    Dense(10, activation='softmax')\n","])"],"metadata":{"id":"evRYYIIACdze","executionInfo":{"status":"ok","timestamp":1709935248775,"user_tz":300,"elapsed":188,"user":{"displayName":"Daniel Fernando Morales Bernal","userId":"00068911931279033562"}}},"execution_count":35,"outputs":[]},{"cell_type":"code","source":["model1.summary()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dau61-e1DEA4","executionInfo":{"status":"ok","timestamp":1709935329630,"user_tz":300,"elapsed":213,"user":{"displayName":"Daniel Fernando Morales Bernal","userId":"00068911931279033562"}},"outputId":"e8025897-ddd8-415d-f78d-c2c0539e7cdb"},"execution_count":36,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential_16\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," conv2d_15 (Conv2D)          (None, 14, 14, 16)        160       \n","                                                                 \n"," max_pooling2d_9 (MaxPoolin  (None, 4, 4, 16)          0         \n"," g2D)                                                            \n","                                                                 \n"," flatten_9 (Flatten)         (None, 256)               0         \n","                                                                 \n"," dense_11 (Dense)            (None, 10)                2570      \n","                                                                 \n","=================================================================\n","Total params: 2730 (10.66 KB)\n","Trainable params: 2730 (10.66 KB)\n","Non-trainable params: 0 (0.00 Byte)\n","_________________________________________________________________\n"]}]}]}